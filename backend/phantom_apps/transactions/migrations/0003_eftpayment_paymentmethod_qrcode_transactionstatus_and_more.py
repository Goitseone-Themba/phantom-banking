# Generated by Django 5.2.1 on 2025-06-13 01:21

import django.core.validators
import django.db.models.deletion
import uuid
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('customers', '0001_initial'),
        ('merchants', '0001_initial'),
        ('transactions', '0002_initial'),
        ('wallets', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='EFTPayment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('bank_code', models.CharField(choices=[('fnb', 'First National Bank'), ('standard', 'Standard Bank'), ('barclays', 'Barclays Bank'), ('nedbank', 'Nedbank'), ('choppies', 'Choppies Bank')], max_length=20)),
                ('account_number', models.CharField(max_length=50)),
                ('reference', models.CharField(max_length=100)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled'), ('refunded', 'Refunded')], default='pending', max_length=20)),
                ('external_reference', models.CharField(blank=True, max_length=100, null=True)),
                ('response_data', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'eft_payments',
            },
        ),
        migrations.CreateModel(
            name='PaymentMethod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=20, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'payment_methods',
            },
        ),
        migrations.CreateModel(
            name='QRCode',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('reference', models.CharField(blank=True, max_length=100)),
                ('description', models.CharField(blank=True, max_length=255)),
                ('qr_token', models.CharField(editable=False, max_length=32, unique=True)),
                ('qr_data', models.TextField()),
                ('status', models.CharField(choices=[('active', 'Active'), ('used', 'Used'), ('expired', 'Expired'), ('cancelled', 'Cancelled')], default='active', max_length=20)),
                ('expires_at', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'qr_codes',
            },
        ),
        migrations.CreateModel(
            name='TransactionStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=20, unique=True)),
                ('name', models.CharField(max_length=50)),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'db_table': 'transaction_statuses',
            },
        ),
        migrations.RemoveIndex(
            model_name='transaction',
            name='transaction_status_94cf9d_idx',
        ),
        migrations.RemoveIndex(
            model_name='transaction',
            name='transaction_merchan_eb9d4a_idx',
        ),
        migrations.RemoveIndex(
            model_name='transaction',
            name='transaction_wallet__87baad_idx',
        ),
        migrations.RenameField(
            model_name='transaction',
            old_name='fees',
            new_name='fee',
        ),
        migrations.RemoveField(
            model_name='transaction',
            name='payment_channel',
        ),
        migrations.AddField(
            model_name='transaction',
            name='customer',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='customers.customer'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='transaction',
            name='from_wallet',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='outgoing_transactions', to='wallets.wallet'),
        ),
        migrations.AddField(
            model_name='transaction',
            name='metadata',
            field=models.JSONField(blank=True, default=dict),
        ),
        migrations.AddField(
            model_name='transaction',
            name='net_amount',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True),
        ),
        migrations.AddField(
            model_name='transaction',
            name='payment_details',
            field=models.JSONField(blank=True, default=dict),
        ),
        migrations.AddField(
            model_name='transaction',
            name='reference',
            field=models.CharField(blank=True, max_length=100),
        ),
        migrations.AddField(
            model_name='transaction',
            name='to_wallet',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='incoming_transactions', to='wallets.wallet'),
        ),
        migrations.AddField(
            model_name='transaction',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AlterField(
            model_name='transaction',
            name='amount',
            field=models.DecimalField(decimal_places=2, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))]),
        ),
        migrations.AlterField(
            model_name='transaction',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True),
        ),
        migrations.AlterField(
            model_name='transaction',
            name='description',
            field=models.CharField(blank=True, max_length=255),
        ),
        migrations.AlterField(
            model_name='transaction',
            name='merchant',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='merchants.merchant'),
        ),
        migrations.AlterField(
            model_name='transaction',
            name='reference_number',
            field=models.CharField(blank=True, max_length=100, null=True, unique=True),
        ),
        migrations.AlterField(
            model_name='transaction',
            name='transaction_type',
            field=models.CharField(choices=[('qr_payment', 'QR Code Payment'), ('eft_topup', 'EFT Top-up'), ('wallet_transfer', 'Wallet Transfer'), ('merchant_payment', 'Merchant Payment'), ('refund', 'Refund'), ('fee', 'Transaction Fee'), ('payment', 'General Payment'), ('deposit', 'Deposit'), ('withdrawal', 'Withdrawal')], max_length=20),
        ),
        migrations.AlterField(
            model_name='transaction',
            name='wallet',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='wallet_transactions', to='wallets.wallet'),
        ),
        migrations.AddField(
            model_name='eftpayment',
            name='customer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='customers.customer'),
        ),
        migrations.AddField(
            model_name='eftpayment',
            name='transaction',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='transactions.transaction'),
        ),
        migrations.AddField(
            model_name='eftpayment',
            name='wallet',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='wallets.wallet'),
        ),
        migrations.AddField(
            model_name='transaction',
            name='payment_method',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='transactions.paymentmethod'),
        ),
        migrations.AddField(
            model_name='qrcode',
            name='customer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='customers.customer'),
        ),
        migrations.AddField(
            model_name='qrcode',
            name='merchant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='merchants.merchant'),
        ),
        migrations.AddField(
            model_name='qrcode',
            name='transaction',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='transactions.transaction'),
        ),
        migrations.AlterField(
            model_name='transaction',
            name='status',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='transactions.transactionstatus'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['customer', 'status'], name='transaction_custome_4c4415_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['merchant', 'status'], name='transaction_merchan_7bd847_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['transaction_type', 'status'], name='transaction_transac_fd0dcd_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['created_at'], name='transaction_created_5c02ac_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['reference_number'], name='transaction_referen_dda4a8_idx'),
        ),
        migrations.AddIndex(
            model_name='eftpayment',
            index=models.Index(fields=['customer', 'status'], name='eft_payment_custome_8725bc_idx'),
        ),
        migrations.AddIndex(
            model_name='eftpayment',
            index=models.Index(fields=['external_reference'], name='eft_payment_externa_a7c64a_idx'),
        ),
        migrations.AddIndex(
            model_name='eftpayment',
            index=models.Index(fields=['created_at'], name='eft_payment_created_0f5174_idx'),
        ),
        migrations.AddIndex(
            model_name='qrcode',
            index=models.Index(fields=['qr_token'], name='qr_codes_qr_toke_89be71_idx'),
        ),
        migrations.AddIndex(
            model_name='qrcode',
            index=models.Index(fields=['merchant', 'status'], name='qr_codes_merchan_233f7a_idx'),
        ),
        migrations.AddIndex(
            model_name='qrcode',
            index=models.Index(fields=['expires_at'], name='qr_codes_expires_a30ec8_idx'),
        ),
    ]
